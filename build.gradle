plugins {
	id 'fabric-loom' version '1.10-SNAPSHOT'
	id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version "8+"
}

group = project.maven_group

base {
	archivesName = project.archives_base_name
}

configurations {
    embed
    compileOnly.extendsFrom(embed)
}

shadowJar {
    configurations = [project.configurations.embed]
    exclude('META-INF/services/**')
    relocate "com.moandjiezana", "dcshadow.com.moandjiezana"
}

repositories {
    mavenCentral()
    maven {
        url = uri("https://repo.opencollab.dev/main/")
    }
    maven { url 'https://jitpack.io' }

	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
}

loom {
	splitEnvironmentSourceSets()

	mods {
		"altx" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    include(modImplementation('me.lucko:fabric-permissions-api:0.3.3'))

    // config
    embed implementation("de.erdbeerbaerlp:toml4j:dd60f51")

    // floodgate integration
    compileOnly('org.geysermc.floodgate:api:2.2.4-SNAPSHOT')

    // justsync integration
    compileOnly('com.github.OrdinarySMP:DiscordJustSync:master-SNAPSHOT')

}

tasks.build.dependsOn(tasks.shadowJar)

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

remapJar {
    // wait until the shadowJar is done
    dependsOn(shadowJar)
    mustRunAfter(shadowJar)
    // Set the input jar for the task. Here use the shadow Jar that include the .class of the transitive dependency
    inputFile = file(shadowJar.archiveFile)
}


jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

artifacts {
    archives tasks.shadowJar
}


// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
